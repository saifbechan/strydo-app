{"version":3,"sources":["classes/card.class.js","data.js","global.styles.js","App.styles.js","components/header/header.styles.jsx","components/header/header.component.jsx","dnd/itemtypes.js","components/remove-card/remove-card.styles.jsx","components/remove-card/remove-card.component.jsx","components/card/card.styles.js","components/drop-card/drop-card.styles.jsx","components/drop-card/drop-card.component.jsx","components/card/card.component.jsx","components/column/column.styles.js","components/column/column.component.jsx","components/add-card/add-card.styles.js","components/add-card/add-card.component.jsx","utils/column.utils.js","App.js","index.js"],"names":["lorem","LoremIpsum","wordsPerSentence","max","min","Card","id","uuidv1","content","generateSentences","getId","getContent","toJSON","this","title","backgroundColor","randomColor","cards","GlobalStyle","createGlobalStyle","ColumnsContainer","styled","div","HeaderComponent","HeaderLogoComponent","img","HeaderTitleComponent","h1","HeaderSubTitleComponent","h2","Header","src","process","ItemTypes","RemoveCardContainer","button","RemoveCard","columnId","cardId","removeCard","data-testid","onClick","CardContainer","DropCardContainer","isOver","DropCardPlaceholderContainer","DropCard","idx","moveCard","useDrop","accept","drop","item","collect","monitor","canDrop","ref","children","useDrag","type","isDragging","drag","ColumnContainer","H3Container","h3","CardsContainer","Column","map","card","key","AddCardContainer","AddCard","addCard","columns","column","push","filter","targetCardIndex","targetColumnId","cardsToMove","splice","App","useState","data","setColumns","handleAddCard","args","handleRemoveCard","handleMoveCard","Fragment","ReactDOM","render","DndProvider","backend","Backend","document","getElementById"],"mappings":"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","file":"static/js/main.07ddfaf8.chunk.js","sourcesContent":["import uuidv1 from 'uuid/v1';\r\nimport { LoremIpsum } from 'lorem-ipsum';\r\n\r\nconst lorem = new LoremIpsum({\r\n  wordsPerSentence: {\r\n    max: 6,\r\n    min: 3\r\n  }\r\n});\r\n\r\nclass Card {\r\n  constructor(id = uuidv1(), content = lorem.generateSentences(2)) {\r\n    this.id = id;\r\n    this.content = content;\r\n  }\r\n\r\n  getId = () => this.id;\r\n\r\n  getContent = () => this.content;\r\n\r\n  toJSON = () => ({\r\n    id: this.id,\r\n    content: this.content\r\n  });\r\n}\r\n\r\nexport default Card;\r\n","import uuidv1 from 'uuid/v1';\r\nimport randomColor from 'randomcolor';\r\n\r\nimport Card from './classes/card.class';\r\n\r\nexport default () => [\r\n  {\r\n    id: uuidv1(),\r\n    title: 'Backlog',\r\n    backgroundColor: randomColor(),\r\n    cards: [\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON()\r\n    ]\r\n  },\r\n  {\r\n    id: uuidv1(),\r\n    title: 'To do',\r\n    backgroundColor: randomColor(),\r\n    cards: [\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON()\r\n    ]\r\n  },\r\n  {\r\n    id: uuidv1(),\r\n    title: 'In progress',\r\n    backgroundColor: randomColor(),\r\n    cards: [\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON()\r\n    ]\r\n  },\r\n  {\r\n    id: uuidv1(),\r\n    title: 'Test',\r\n    backgroundColor: randomColor(),\r\n    cards: [\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON()\r\n    ]\r\n  },\r\n  {\r\n    id: uuidv1(),\r\n    title: 'Done',\r\n    backgroundColor: randomColor(),\r\n    cards: [\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON(),\r\n      new Card().toJSON()\r\n    ]\r\n  }\r\n];\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Lato', sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ColumnsContainer = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-gap: 15px;\r\n  margin: 0 75px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderComponent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 140px auto;\r\n  margin: 0 0 0 100px;\r\n`;\r\n\r\nexport const HeaderLogoComponent = styled.img`\r\n  grid-row-start: 1;\r\n  grid-row-end: 3;\r\n  margin: 20px 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const HeaderTitleComponent = styled.h1`\r\n  font-family: 'Lato';\r\n  font-size: 3em;\r\n  font-weight: bold;\r\n  margin: 30px 0 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const HeaderSubTitleComponent = styled.h2`\r\n  color: grey;\r\n  font-size: 1em;\r\n  font-style: italic;\r\n  margin: 0 0 25px;\r\n  padding: 0;\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  HeaderComponent,\r\n  HeaderTitleComponent,\r\n  HeaderSubTitleComponent,\r\n  HeaderLogoComponent\r\n} from './header.styles';\r\n\r\nconst Header = () => (\r\n  <HeaderComponent>\r\n    <HeaderLogoComponent src={`${process.env.PUBLIC_URL}/logo.png`} />\r\n    <HeaderTitleComponent>Strydo App</HeaderTitleComponent>\r\n    <HeaderSubTitleComponent>\r\n      a lightweight kanban board showcase app\r\n    </HeaderSubTitleComponent>\r\n  </HeaderComponent>\r\n);\r\n\r\nexport default Header;\r\n","export const ItemTypes = {\r\n  CARD: 'card'\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const RemoveCardContainer = styled.button`\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { RemoveCardContainer } from './remove-card.styles';\r\n\r\nconst RemoveCard = ({ columnId, cardId, removeCard }) => (\r\n  <RemoveCardContainer\r\n    data-testid='remove-card-handler'\r\n    onClick={() => removeCard(columnId, cardId)}\r\n  >\r\n    - remove card\r\n  </RemoveCardContainer>\r\n);\r\n\r\nexport default RemoveCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n  border: 1px solid silver;\r\n  margin: 0 5px;\r\n  padding: 15px 20px;\r\n\r\n  &:hover {\r\n    background-color: whitesmoke;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const DropCardContainer = styled.div`\r\n  height: ${({ isOver }) => (isOver ? '100px' : '5px')};\r\n  padding: 5px;\r\n`;\r\n\r\nexport const DropCardPlaceholderContainer = styled.div`\r\n  background: ${({ isOver }) => (isOver ? 'snow' : 'none')};\r\n  border: ${({ isOver }) => (isOver ? '1px dashed grey' : 'none')};\r\n  height: 100%;\r\n`;\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../dnd/itemtypes';\r\n\r\nimport {\r\n  DropCardContainer,\r\n  DropCardPlaceholderContainer\r\n} from './drop-card.styles';\r\n\r\nconst DropCard = ({ idx, columnId, moveCard }) => {\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    drop: item => moveCard(item.id, item.columnId, idx, columnId),\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver(),\r\n      canDrop: !!monitor.canDrop()\r\n    })\r\n  });\r\n\r\n  return (\r\n    <DropCardContainer ref={drop} isOver={isOver}>\r\n      <DropCardPlaceholderContainer isOver={isOver} />\r\n    </DropCardContainer>\r\n  );\r\n};\r\n\r\nexport default DropCard;\r\n","import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../dnd/itemtypes';\r\n\r\nimport RemoveCard from '../remove-card/remove-card.component';\r\n\r\nimport { CardContainer } from './card.styles';\r\nimport DropCard from './../drop-card/drop-card.component';\r\n\r\nconst Card = ({ id, idx, columnId, removeCard, moveCard, children }) => {\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.CARD, id, columnId },\r\n    collect: monitor => ({\r\n      isDragging: !!monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <CardContainer\r\n        id={id}\r\n        data-testid='card'\r\n        ref={drag}\r\n        isDragging={isDragging}\r\n      >\r\n        {children}\r\n        <RemoveCard columnId={columnId} cardId={id} removeCard={removeCard} />\r\n      </CardContainer>\r\n      <DropCard idx={++idx} columnId={columnId} moveCard={moveCard} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nexport const ColumnContainer = styled.div`\r\n  border: 1px solid grey;\r\n`;\r\n\r\nexport const H3Container = styled.h3`\r\n  background-color: ${({ backgroundColor }) => `${backgroundColor}`};\r\n  font-size: 15px;\r\n  margin: 0;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const CardsContainer = styled.div`\r\n  border-top: 1px solid grey;\r\n`;\r\n","import React from 'react';\r\n\r\nimport Card from '../card/card.component';\r\nimport DropCard from './../drop-card/drop-card.component';\r\n\r\nimport { ColumnContainer, H3Container, CardsContainer } from './column.styles';\r\n\r\nconst Column = ({\r\n  id,\r\n  title,\r\n  backgroundColor,\r\n  cards,\r\n  removeCard,\r\n  moveCard\r\n}) => (\r\n  <ColumnContainer id={id}>\r\n    <H3Container backgroundColor={backgroundColor}>{title}</H3Container>\r\n    <CardsContainer>\r\n      <DropCard idx={0} columnId={id} moveCard={moveCard} />\r\n      {cards.map((card, idx) => (\r\n        <Card\r\n          key={card.id}\r\n          id={card.id}\r\n          idx={idx}\r\n          columnId={id}\r\n          removeCard={removeCard}\r\n          moveCard={moveCard}\r\n        >\r\n          {card.content}\r\n        </Card>\r\n      ))}\r\n    </CardsContainer>\r\n  </ColumnContainer>\r\n);\r\n\r\nexport default Column;\r\n","import styled from 'styled-components';\r\n\r\nexport const AddCardContainer = styled.button`\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { AddCardContainer } from './add-card.styles';\r\n\r\nconst AddCard = ({ columnId, addCard }) => (\r\n  <AddCardContainer\r\n    data-testid='add-card-handler'\r\n    onClick={() => addCard(columnId)}\r\n  >\r\n    + add card\r\n  </AddCardContainer>\r\n);\r\n\r\nexport default AddCard;\r\n","import Card from '../classes/card.class';\r\n\r\nexport const addCard = (columns, columnId) =>\r\n  columns.map(column => {\r\n    if (column.id === columnId) {\r\n      column.cards.push(new Card().toJSON());\r\n    }\r\n    return column;\r\n  });\r\n\r\nexport const removeCard = (columns, columnId, cardId) =>\r\n  columns.map(column => {\r\n    if (column.id === columnId) {\r\n      column.cards = column.cards.filter(card => card.id !== cardId);\r\n    }\r\n    return column;\r\n  });\r\n\r\nexport const moveCard = (\r\n  columns,\r\n  cardId,\r\n  columnId,\r\n  targetCardIndex,\r\n  targetColumnId\r\n) => {\r\n  const cardsToMove = [];\r\n  const cloumnsWithCardRemoved = columns.map(column => {\r\n    if (column.id === columnId) {\r\n      column.cards = column.cards.filter(card => {\r\n        if (card.id !== cardId) {\r\n          return true;\r\n        }\r\n        cardsToMove.push(card);\r\n        return false;\r\n      });\r\n    }\r\n    return column;\r\n  });\r\n\r\n  return cloumnsWithCardRemoved.map(column => {\r\n    if (column.id === targetColumnId) {\r\n      column.cards.splice(targetCardIndex, 0, ...cardsToMove);\r\n    }\r\n    return column;\r\n  });\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport data from './data';\r\n\r\nimport { GlobalStyle } from './global.styles';\r\nimport { ColumnsContainer } from './App.styles';\r\n\r\nimport Header from './components/header/header.component';\r\nimport Column from './components/column/column.component';\r\nimport AddCard from './components/add-card/add-card.component';\r\n\r\nimport { addCard, removeCard, moveCard } from './utils/column.utils';\r\n\r\nconst App = () => {\r\n  const [columns, setColumns] = useState(data);\r\n\r\n  const handleAddCard = (...args) => setColumns(addCard(columns, ...args));\r\n  const handleRemoveCard = (...args) =>\r\n    setColumns(removeCard(columns, ...args));\r\n  const handleMoveCard = (...args) => setColumns(moveCard(columns, ...args));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <ColumnsContainer>\r\n        {columns.map(column => (\r\n          <div key={column.id}>\r\n            <Column\r\n              {...column}\r\n              removeCard={handleRemoveCard}\r\n              moveCard={handleMoveCard}\r\n            />\r\n            <AddCard addCard={handleAddCard} columnId={column.id} />\r\n          </div>\r\n        ))}\r\n      </ColumnsContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DndProvider } from 'react-dnd';\r\nimport Backend from 'react-dnd-html5-backend';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <DndProvider backend={Backend}>\r\n    <App />\r\n  </DndProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}